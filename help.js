helpText=[
'INPUT',
'keyboard_check(_key)',
'keyboard_check_pressed(_key)',
'keyboard_check_released(_key)',
'mouse_check()',
'mouse_check_pressed()',
'mouse_check_released()',
'mouse_x ',
'mouse_y',
'wheelDir // is used for mouse wheel direction',
'MATH',
'abs(_value)',
'average(nums)',
'floor(_value)',
'irandom(_value)',
'random(_value)',
'sign(_value)',
'degtorad(_degree)',
'radtodeg(_degree)',
'lengthdir_x(_length, _direction)',
'lengthdir_y(_length, _direction)',
'point_direction(_x1, _y1, _x2, _y2)',
'point_distance(_x1, _y1, _x2, _y2)',
'SOUNDS',
'make_sound(_src,buffers)',
'play(sound)',
'DRAWING',
'draw_text(x, y, text, size)',
'draw_centered_text(x, y, text, size)',
'draw_set_image(file)',
'draw_image(img,x,y,w,h,rot,ox,oy)',
'draw_circle(x, y, r, outline)',
'draw_line(x1, y1, x2, y2)',
'draw_rectangle(x, y, w, h,outline,rot,ox,oy)',
'draw_set_alpha(_alpha)',
'draw_set_color([r,g,b])',
'draw_set_linedash(dash)',
'draw_set_linewidth(width)',
'MISC',
'choose()',
'hide_mouse()',
'show_mouse()',
  'setTimeout(function(){},1000)',
  'requestFullscreen(element)',
  'fullscreen // varibale used to detect wether fullscreen or not',
'fps is frames per second',
'run=false //prevents automatic redraw of canvas',
'MOUSE CLICK TO EXIT',
  'window.onerror = function(message, source, lineno, colno, error) {let code = localStorage.getItem("codeIDE");let getScriptLine = code => code.split("<script>")[0].split("\\n").length;let ln = (getScriptLine(code)-1) + lineno;msg = message+" , line :"+ ln+" , column: " +colno+ " , " +error;let errorCursor = {"line":ln,"ch":colno,"sticky":null};localStorage.setItem("errorCursorIDE",JSON.stringify(errorCursor));alert(msg);window.close();}'
]
